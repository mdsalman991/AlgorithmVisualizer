{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/queen.PNG","homeComponents/images/binaryTree.png","homeComponents/images/convexHull.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","convexHullComponents/timer.jsx","algorithms/grahamScan.js","convexHullComponents/canvas.jsx","convexHullComponents/navbar.jsx","convexHullComponents/slider.jsx","convexHullComponents/menu.jsx","convexHullComponents/convexHull.jsx","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","App.js","reportWebVitals.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onCreateMaze","onVisualize","onClearPath","onClearBoard","dijkstra","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","i","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","endNode","algo","list","nodesInOrder","currentNode","pop","nodesToPush","getNeighbours","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","slice","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","console","log","getInitialGrid","textAlign","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","a","sleep","animateShortestPath","toggleVisit","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","href","Greet","TypeWriterC","options","strings","autoStart","loop","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","graph","primes","queen","convex","binSearch","Fragment","TextField","label","toLowerCase","includes","Footer","class","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","isDisabled","selected","isClickable","cursor","onRefresh","disabled","onChangeSpeed","onChangeValues","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startSeive","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","pos","newCells","newCell","rows","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","kk","selectionSort","arr","n","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","CSlider","RangeSlider","setValue","newValue","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","isAttacked","isCurrent","isPresent","isChecked","getStyled","onClear","Queen","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","turnOffAttack","startAlgo","queensAlgo","newBoard2","result","getChecked","onStop","N","cols","getCell","cw","b","c","ccw","Canvas","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","fillStyle","strokeStyle","onGoing","beginPath","add","lineWidth","moveTo","from","arc","PI","fill","closePath","lineTo","stroke","onTurnOff","myRef","createRef","redrawDots","prevProps","prevState","snapshot","ref","canvas","ctx","res","points","size","pointStart","pointEnd","up","down","convex_hull","ConvexHull","isALgoLive","handleRefreshDots","handleAlgoStateChanged","isAlgoLive","handleVisualize","getNewDots","handleMoreDot","dot","getDot","rowpos","EntryPoint","error","setUpper","validateNumbers","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","HeapSort","heapify","temp","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a7a3efc.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './node.css'\nclass Node extends Component {\n    static = {\n        row: this.props.row,\n        col: this.props.col\n    }\n    render() {\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\n        return (\n            <div\n                id = {`node-${this.props.row}-${this.props.col}`}\n                className={this.getClassName()}\n                onMouseDown={() => onMouseDown(row,col)}\n                onMouseEnter={() => onMouseEnter(row,col)}\n                onMouseUp={() => onMouseUp(row,col)}\n            />\n        );\n    }\n    getClassName(){\n        if(this.props.node.isWall === true){\n            return \"node node-wall\";\n        } else if( this.props.node.isStartNode === true ){\n            return \"node  node-start\";\n        } else if( this.props.node.isEndNode === true ){\n            return \"node  node-end\";\n        } else if(this.props.node.ispathNode){\n            return 'node node-shortest-path';\n        }else if( this.props.node.isVisited === true ){\n            return \"node  node-visited\";\n        } else{\n            return \"node\";\n        }\n    }\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport Node from \"./node\";\nimport './grid.css';\nclass Grid extends Component {\n    state = {\n        grid: this.props.grid\n    }\n\n    render() {\n        return (\n            <div className=\"Grid\">\n                {this.props.grid.map((row, rowidx) => {\n                    return (\n                        <div key={rowidx}>\n                            {row.map((node, nodeidx) => {\n                                const {row, col, isWall, visitedNode, } = node;\n                                return (\n                                    <Node\n                                        key={nodeidx}\n                                        row={row}\n                                        col={col}\n                                        node={node}\n                                        isWall={isWall}\n                                        visitedNode={ visitedNode }\n                                        onMouseDown = {this.props.onMouseDown}\n                                        onMouseEnter = {this.props.onMouseEnter}\n                                        onMouseUp = {this.props.onMouseUp}\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map( (item,itemidx)=>{\n                        return(\n                            <MenuItem\n                                key={itemidx}\n                                value={itemidx}>{item}</MenuItem>\n                        );\n                    } )}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Pathfinder</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\" >\n                <SimpleSelect\n                    onAlgoChanged = {this.props.onAlgoChanged}\n                    items={this.props.algorithms}\n                />\n                <SimpleSelect\n                    onAlgoChanged={this.props.onMazeChanged}\n                    items={this.props.mazes}\n                />\n                <button\n                    className='btn btn-lg btn-secondary m-2'\n                    onClick={this.props.onCreateMaze}>\n                    Create Maze\n                </button>\n                <button\n                    onClick={this.props.onVisualize}\n                    className=\"btn btn-warning btn-lg\"\n                >Visualize</button>\n                <button\n                    onClick={this.props.onClearPath}\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\n                <button\n                    onClick={this.props.onClearBoard}\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\n            </nav>\n        );\n    }\n}\n\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nlet val = 0;\n\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n    val++;\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endCol+startCol)/2);\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\n    let start = startRow;\n    if( !board[startRow-1][mid].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endRow;\n    if( !board[endRow+1][mid].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[i][mid].isWall = true;\n            pairs.push({\n                xx:i,\n                yy:mid\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\n}\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endRow+startRow)/2);\n  //  console.log(\"mid: \",mid);\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\n    let start = startCol;\n    if( !board[mid][startCol-1].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endCol;\n    if( !board[mid][endCol+1].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[mid][i].isWall = true;\n            pairs.push({\n                xx:mid,\n                yy:i\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\n\n}","export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}","import React, {Component, Fragment} from 'react';\nimport Grid from \"./grid\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\nimport {getMaze} from \"../algorithms/recursiveMaze\";\nimport {bfsdfs} from \"../algorithms/bfs\";\nimport {randomMaze} from \"../algorithms/randomMaze\";\n\nclass Pathfinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid:[],\n            mouseIsPressed:false,\n            algorithms:[\n                \"Dijsktra\",\"BFS\",\"DFS\"\n            ],\n            algo:0,\n            mazes:[\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\n            ],\n            maze:0\n        }\n    }\n    componentDidMount() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const row = Math.max(Math.floor(height/25)-7,10);\n        const col = Math.floor(width/25);\n        const startNode = {\n            row:4,\n            col:4\n        };\n        const endNode = {\n            row: row-5,\n            col: col-5\n        }\n        console.log( endNode.row );\n        const grid = getInitialGrid(row,col);\n        grid[startNode.row][startNode.col].isStartNode = true;\n        grid[row-5][col-5].isEndNode = true;\n        this.setState({grid,row,col,startNode,endNode});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar/>\n\n                <Menu\n                    onAlgoChanged = {this.handleAlgoChanged}\n                    onVisualize = {this.handleClick}\n                    algorithms={this.state.algorithms}\n                    mazes={this.state.mazes}\n                    onMazeChanged={this.handleMazeChanged}\n                    onCreateMaze={this.handleCreateMaze}\n                    onClearBoard={this.handleClearBoard}\n                    onClearPath={this.handleClearPath}\n                />\n                <span style={{margin: 2}}/>\n                <div style={{textAlign:\"center\"}} >\n                    <Grid\n                        grid={this.state.grid}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseUp={this.handleMouseUp}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n\n    handleMouseDown = (row, col) => {\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n        this.setState({mouseIsPressed: true});\n    }\n\n    handleMouseEnter = (row, col) => {\n        if (this.state.mouseIsPressed === false) return;\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n    }\n\n    handleMouseUp = (row,col) => {\n        this.setState({mouseIsPressed: false});\n    }\n\n    handleAlgoChanged = (val) =>{\n        this.setState({algo:val});\n    }\n\n    handleMazeChanged = (val)=>{\n        this.setState({maze:val});\n    }\n\n    handleCreateMaze = () =>{\n        let pairs;\n        switch (this.state.maze){\n            case 1:\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\n                break;\n            default:\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\n        }\n        const {startNode,endNode} = this.state;\n        for( let i = 0;i<pairs.length;i++ ){\n            setTimeout(()=>{\n                if( i === pairs.length-1 ){\n                   // this.setState({grid:this.state.grid});\n                    const grid = this.state.grid;\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\n                    this.setState({grid});\n                }\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\n                }\n            },i*20);\n        }\n    }\n    handleClearBoard = ()=>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearBoard(grid,row,col)});\n    }\n    handleClearPath = () =>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearPath(grid,row,col)});\n    }\n    handleClick = () =>{\n      /*  for(let i = 0;i<20;i++){\n            for(let j = 0; j<50;j++){\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\n            }\n        }*/\n        this.visualizeDijkstra();\n        /*for(let i = 0;i<this.state.row;i++){\n            for(let j = 0; j<this.state.col;j++){\n                setTimeout(()=>{\n                    const newGrid = toggleVisit(this.state.grid,i,j);\n                    this.setState({grid:newGrid});\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\n                },100*(i+j)+j);\n            }\n        }*/\n    }\n\n    visualizeDijkstra() {\n        const {grid} = this.state;\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\n        let visitedNodesInOrder;\n        switch (this.state.algo){\n            case 0:\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n                break;\n            case 1:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\n                break;\n            default:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\n        }\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n            if (i === visitedNodesInOrder.length) {\n              //  setTimeout(() => {\n                    await sleep(100);\n                    await this.animateShortestPath(nodesInShortestPathOrder);\n\n              //  }, 10 * (i+10));\n                return;\n            }\n           // setTimeout(() => {\n                const node = visitedNodesInOrder[i];\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\n                //this.setState({grid:newGrid});\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-visited';\n                await sleep(10);\n           // }, 10 * i);\n        }\n    }\n\n    async animateShortestPath(nodesInShortestPathOrder) {\n        const grid = this.state.grid;\n        const newGrid = grid.slice();\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n         //   setTimeout(() => {\n\n                const node = nodesInShortestPathOrder[i];\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\n                newGrid[node.row][node.col] = newNode;\n                if( i === nodesInShortestPathOrder.length-1 ){\n                    this.setState({grid:newGrid});\n                }\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-shortest-path';\n                await sleep(50);\n            //}, 50 * i);\n        }\n    }\n\n}\n\nconst clearPath = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\nconst clearBoard = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                isWall: false,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\n\nconst toggleVisit = (grid,row,col) =>{\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        visitedNode: !node.visitedNode\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n}\nconst getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        isWall: true//!node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n};\nconst getInitialGrid = (totRow,totCol) => {\n    const grid = [];\n    for (let row = 0; row < totRow; row++) {\n        const currentRow = [];\n        for (let col = 0; col < totCol; col++) {\n            currentRow.push(createNode(row,col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}\n\nconst createNode = (row,col)=>{\n    return {\n        row,\n        col,\n        isWall: false,\n        isStartNode:false,\n        isEndNode:false,\n        distance:Infinity,\n        visitedNode: false,\n        isVisited:false,\n        ispathNode:false,\n        previousNode:null\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Pathfinder;","export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}","import React, {Component} from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n                <a className=\"navbar-brand\" href=\"#\">Algorithm Visualizer</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">About <span className=\"sr-only\">(current)</span></a>\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport \"./style.css\"\nclass Greet extends Component {\n    render() {\n        return (\n            <div className=\"greet\">\n                <h1 className=\"display-3\">\n                    Algorithm Visualizer\n                </h1>\n                <hr className=\"dropdown-divider\"/>\n                <h1 className=\"display-5\">\n                    Visualize algorithms for a better understanding\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default Greet;","import React, {Component} from 'react';\nimport Typewriter from \"typewriter-effect\";\nimport './style.css'\nclass TypeWriterC extends Component {\n    state = {\n\n    }\n    render() {\n        return (\n            <div className=\"type display-3\">\n                <span className=\"badge badge-dark\">\n                <Typewriter\n                    options={{\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\n                        autoStart: true,\n                        loop: true,\n                    }}\n                />\n            </span>\n            </div>\n        );\n    }\n}\n\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:250,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 140\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    src={props.card.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\n                        {props.card.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.card.description}\n                    </Typography>\n                    <ExpandMore/>\n                </CardContent>\n            </Card>\n        </CardActionArea>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"whitesmoke\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"whitesmoke\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","import React, {Component} from 'react';\nimport ImgMediaCard from \"./card\";\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport {Link} from \"react-router-dom\";\nimport graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\"\nimport sort from \"./sort.png\"\nimport queen from './images/queen.PNG'\nimport binSearch from './images/binaryTree.png'\nimport {getDetails} from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n\n    state = {\n        cards:[],\n        filter:\"\"\n    }\n\n    componentDidMount() {\n        this.setState({cards:getDetails()});\n    }\n    getData = (e)=>{\n        console.log(e.target.value);\n        this.setState({filter:e.target.value});\n    }\n    render() {\n        return (\n           <React.Fragment>\n               <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div>\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\n                   {\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\n                           <div>\n                               <ImgMediaCard2\n                                   className=\"d-flex flex-wrap\"\n                                   key={card.id}\n                                   card={card}/>\n                           </div>\n                       ))\n                   }\n\n               </div>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */","import graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport convex from './images/convexHull.png';\nexport function getDetails(){\n   return [\n       {\n           id:1,\n           title:\"Pathfinder\",\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\n           route:\"/pathfinder\",\n           img:graph\n       },\n       {\n           id:2,\n           title:\"Prime Numbers\",\n           description:\"Visualize how Seive is better than brute force\",\n           route:\"/prime\",\n           img:primes\n       },\n       {\n           id:3,\n           title:\"Sorting Algorithm\",\n           description:\"Compare different sorting algorithms\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:9,\n           title:\"Recursive Sorting\",\n           description:\"Compare different recursive sorting algorithms\",\n           route:\"/recursivesort\",\n           img:sort\n       },\n       {\n           id:4,\n           title:\"N Queen\",\n           description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n           route:\"/nqueen\",\n           img:queen\n       },\n       {\n           id:5,\n           title:\"Convex Hull\",\n           description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\n           route:\"/convexhull\",\n           img:convex\n       },\n       {\n           id:7,\n           title:\"Binary Search\",\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n           route:\"/binarysearch\",\n           img:binSearch\n       },\n\n\n   ]\n}\n","import React, {Component} from 'react';\nimport GitHubButton from 'react-github-btn'\nimport \"./style.css\";\nclass Footer extends Component {\n    render() {\n        return (\n            <footer class=\"page-footer font-small special-color-dark pt-4 \">\n\n\n\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport Greet from \"./greet\";\nimport TypeWriterC from \"./typewriter\";\nimport Cards from \"./cards\";\nimport Footer from \"./footer\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Greet/>\n                <TypeWriterC/>\n                <Cards/>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClass()}>\n                <span >\n                    {this.props.cell.val}\n                </span>\n            </div>\n        );\n    }\n    getClass = () =>{\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\n        if(isPrime){\n            return \"cell cell-prime m-2\";\n        }else if( isVisiting ){\n            return \"cell cell-visiting m-2\";\n        } else if( isChecking ){\n            return \"cell cell-check m-2\";\n        } else{\n            return \"cell m-2\";\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './cells.css'\nclass Cells extends Component {\n\n    render() {\n        return (\n            <div className=\"Cells\">\n                {this.props.cells.map( (cell,cellidx)=>{\n                    return (\n                        <Cell\n                            key={cellidx}\n                            cell={cell}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sieve</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('1');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        //props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={1} style={{selected:true}} >Seive</MenuItem>\n                    <MenuItem value={2}>Brute Force(NA)</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <SimpleSelect/>\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={100}\n                    step={1}\n                    min={10}\n                    max={500}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button className=\"btn btn-warning btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\n\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport DiscreteSlider from \"./slider\";\nimport Menu from \"./menu\";\n\nclass Seive extends Component {\n    state = {\n        number: 100,\n        cells:[],\n        isRunning:false,\n        speed:500\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const cells = getCells(this.state.number);\n        this.setState({cells});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                    onVisualize = {this.startSeive}\n                    onRefresh = {this.handleRefresh}\n                    isDisabled = {this.state.isRunning}\n                />\n                <Cells\n                    num={this.state.number}\n                    cells={this.state.cells}\n                />\n\n            </div>\n        );\n    }\n\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        this.setState({cells:getCells(value),isRunning:false});\n        console.log(value);\n    }\n    handleRefresh = () => {\n        this.setState({cells:getCells(this.state.number),isRunning:false});\n    }\n    startSeive = async () => {\n        const speed = this.state.speed;\n        this.setState({isRunning:true});\n        const prime = [];\n        for(let i = 0;i<=this.state.number;i++){\n            prime.push(1);\n        }\n        prime[0] = prime[1] = 0;\n        let changedCells = this.state.cells;\n        let prevCheck = -1;\n        let counter = 0;\n        for( let i = 2; i<=this.state.number;i++){\n            if( prime[i] === 1 ){\n             //   setTimeout(()=>{\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\n                    this.setState({cells:changedCells});\n                //},counter*speed);\n                await sleep(this.state.speed);\n                counter++;\n                for(let j = i*i;j<=this.state.number;j+=i){\n                    //setTimeout(()=>{\n                        if( prevCheck!=-1 ){\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        }\n                        prevCheck = j-1;\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        this.setState({cells:changedCells});\n                  //  },counter*speed);\n                    await sleep(this.state.speed);\n                    counter++;\n                    prime[j] = 0;\n                }\n            }\n        }\n      //  setTimeout(()=>{\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n            this.setState({cells:changedCells,isRunning:false});\n       // },counter*speed);\n    }\n}\n\nconst getNewCellPrimeToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isPrime:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellVisitingToggled = (cells,pos)=>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isVisiting:!cell.isVisiting\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellCheckToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isChecking:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getCells = (rows)=>{\n    const cells = [];\n    for(let cell = 1;cell<=rows;cell++){\n        cells.push(createCell(cell))\n    }\n    return cells;\n}\nconst createCell = (val)=>{\n    return {\n        val,\n        isChecking:false,\n        isVisiting:false,\n        isPrime:false\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Seive;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    background:this.checkColor(),\n                    margin:this.props.marg,\n                    // float:'left',\n                    'vertical-align': 'middle'\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"red\";\n        } else{\n            return \"black\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport FlipMove from 'react-flip-move';\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div>\n                <FlipMove\n                    className=\"d-flex justify-content-center align-items-end\"\n                    duration={this.props.speed}\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                >\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rect.kk}\n                            rect={rect}\n                        />\n                    );\n                } )}\n                </FlipMove>\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\n                    <MenuItem value={1}>Selection Sort</MenuItem>\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\n                    <MenuItem value={3}>Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <SwitchLabels\n                    disable={this.props.disable}\n                    onDoubleChange={this.props.onDoubleChange}\n                />\n                <SimpleSelect\n                    pos={1}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n  constructor() {\n      super();\n  }\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' justify-content-center'>\n\n                <Rects\n                    speed={this.state.speed*10}\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (110-val);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n      const {speed} = this.state;\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        const {speed} = this.state;\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms*10));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect(i));\n    }\n    return rects;\n}\nconst getRect = (kk) => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false,\n      kk:kk\n  }\n}\nexport default Sort;\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\nimport './style.css'\nimport queen from './queen.png';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClassName()} style={this.getStyled()}>\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\n            </div>\n        );\n    }\n    getClassName = ()=>{\n        if(this.props.cell.isAttacked){\n            return \"boardCell attacked\";\n        } else if(this.props.cell.isCurrent){\n            return \"boardCell current\";\n        }else if(this.props.cell.isPresent){\n            return \"boardCell present\";\n        }else if(this.props.cell.isChecked){\n            return \"boardCell checked\";\n        } else{\n            return \"boardCell\";\n        }\n    }\n    getStyled = () =>{\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\n            return {\n                backgroundColor:\"white\"\n            }\n        }else{\n            return {\n                backgroundColor:\"grey\"\n            }\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './style.css';\nclass Cells extends Component {\n    render() {\n        return (\n            <div className='booard m-5' >\n                {this.props.board.map( (row,rowidx)=>{\n                    return(\n                        <div key={rowidx}>\n                            {row.map( (cell,cellidx)=>{\n                                return(\n                                    <Cell\n                                        key={cellidx}\n                                        cell={cell}/>\n                                );\n                            } )}\n                        </div>\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">N Queen</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onClear}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Clear Board\n                </button>\n\n                <DiscreteSlider\n                    default={4}\n                    min={1}\n                    max={8}\n                    step={1}\n                    title=\"Grid size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={1}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                />\n\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Queen extends Component {\n    state={\n        board:[],\n        number:4,\n        speed:490,\n        isRunning:false\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const board = getBoard(this.state.number);\n       // board[3][3].isPresent = true;\n        this.setState({board});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onSpeedChange={this.handleSpeedChange}\n                    onCountChange={this.handleQueenChange}\n                    onViusalize={this.startAlgo}\n                    disable={this.state.isRunning}\n                    onClear={this.handleClear}\n                    onStop={this.handleStop}\n                />\n                <div style={{textAlign:\"Center\"}}>\n                    <Cells\n                        board={this.state.board}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleStop =() =>{\n        this.setState({isRunning:false});\n    }\n\n    handleSpeedChange = (val)=>{\n        const speed = (100-val)*10;\n        this.setState({speed});\n    }\n    handleQueenChange = (number)=>{\n        this.setState({number});\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleClear = () => {\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleTurnOff =  () => {\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard});\n    }\n    startAlgo = async ()=>{\n        this.setState({isRunning:true});\n        const newBoard = this.state.board.slice();\n        await this.queensAlgo(newBoard,0);\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard2,isRunning:false});\n    }\n    queensAlgo =  async (board,col) => {\n\n        if( col>=this.state.number ){\n            return true;\n        }\n\n        let newBoard = board.slice();\n        for( let i = 0; i < this.state.number;i++ ){\n\n\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            const result = getChecked(newBoard,i,col,this.state.number);\n            newBoard = result[0];\n\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n            if( result[1] ){\n                const res = await this.queensAlgo(newBoard,col+1)\n                if( res === true){\n                    return true;\n                }\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\n                this.setState({board:newBoard});\n                await sleep(this.state.speed);\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n                this.setState({board:newBoard});\n\n            }\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n        }\n        return false;\n    }\n\n}\n\nexport default Queen;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board,N) =>{\n    const newBoard = board.slice();\n    for( let i = 0;i<N; i++ ){\n        for( let j = 0;j<N;j++ ){\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\n        }\n    }\n    return newBoard;\n}\n\nconst getChecked = (board,row,col,N) =>{\n    const newBoard = board.slice();\n    let pos = true;\n    // same col\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[row][i].isPresent ){\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\n        }\n    }\n    // same row\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[i][col].isPresent ){\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j < N; i++, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\n\n    return [newBoard,pos];\n}\nconst getBoard = (N) =>{\n    const rows = [];\n    for( let i = 0;i<N;i++ ){\n        const cols = [];\n        for(let j =0;j<N;j++){\n            cols.push(getCell(i,j));\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n\nconst getCell = (row,col)=>{\n    return{\n        row,\n        col,\n        isPresent:false,\n        isChecked:false,\n        isAttacked:false,\n        isCurrent:false\n    }\n}","import React, {Component} from 'react';\n\nclass MyTimer extends Component {\n    state={\n        time:0,\n        going:false,\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if( prevProps.onGoing!==this.props.onGoing ){\n            this.setState({going:this.props.onGoing});\n            if( this.props.onGoing ){\n                this.startCount();\n            }\n        }\n    }\n    startCount = async () => {\n        while (this.props.onGoing){\n            this.setState({time:this.state.time+1});\n            if( this.state.time>10){\n                this.setState({time:0});\n                this.props.onStop();\n            }\n            await sleep(100);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>\n                    <span className='badge badge-danger'>\n                    {this.state.time}\n                </span>\n                </h2>\n            </div>\n        );\n    }\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default MyTimer;","export function convex_hull(points){\n    if( points.size === 1 ){\n        return;\n    }\n    const pointStart = points[0];\n    const pointEnd = points[ points.length-1 ];\n    const up = [], down = [];\n    const pairs = [];\n    const lines=[];\n    up.push( pointStart);\n    down.push(pointStart);\n    for( let i = 1; i< points.length ;i++ ){\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\n                lines.push({\n                    from:up[up.length-2],\n                    to:up[up.length-1],\n                    add:false\n                });\n                up.pop();\n            }\n            up.push( points[i] );\n            lines.push({\n                from:up[up.length-2],\n                to:up[up.length-1],\n                add:true\n            })\n        }\n\n    }\n    for(let i = 0; i< points.length;i++){\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\n                lines.push({\n                    from:down[down.length-2],\n                    to:down[down.length-1],\n                    add:false\n                });\n                down.pop();\n            }\n            down.push( points[i] );\n            lines.push({\n                from:down[down.length-2],\n                to:down[down.length-1],\n                add:true\n            })\n        }\n    }\n\n    for (let i = 0; i < up.length; i++){\n        pairs.push(up[i]);\n    }\n    for (let i = down.length - 2; i > 0; i--) {\n        pairs.push(down[i]);\n    }\n    return [pairs,lines];\n}\n\nfunction cw(a, b, c) {\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\n        return true;\n    } else{\n        return false;\n    }\n\n}\n\nfunction ccw(a, b, c){\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\n        return true;\n    } else {\n        return false;\n    }\n\n}","import React, {Component} from 'react';\nimport './style.css';\nimport {convex_hull} from \"../algorithms/grahamScan\";\nclass Canvas extends Component {\n    state={\n        dots:[],\n        lines:[],\n        canvasWidth:300,\n        canvasHeight:100\n    }\n    constructor(props) {\n        super(props);\n        this.setState({canvasWidth:window.innerWidth});\n        this.setState({canvasHeight:window.innerHeight-10});\n        console.log(window.innerWidth);\n        this.myRef = React.createRef();\n        this.canvasLineRef = React.createRef();\n    }\n    componentDidMount() {\n        this.redrawDots();\n       // console.log(this.state.canvasWidth);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if( this.props.dots!==prevProps.dots ){\n            this.setState({dots:this.props.dots});\n            this.redrawDots();\n        }\n        if( this.props.onGoing!==prevProps.onGoing ){\n            if( this.props.onGoing === true ){\n                this.animateLine();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div style={{textAlign:\"center\"}}>\n                <div className=\"containerz\">\n                    <canvas\n                        className='canvas'\n                        id='canvas1'\n                        style={{backgroundColor:\"whitesmoke\"}}\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\n                    <canvas\n                        className='canvas'\n                        id='canvas2'\n                        // style={{backgroundColor:\"grey\"}}\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\n                    />\n\n                </div>\n            </div>\n        );\n    }\n\n    redrawDots(){\n        const canvas = this.myRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = 'lightgrey';\n        ctx.strokeStyle = 'black';\n        for( let i = 0; i<this.props.dots.length;i++ ){\n            ctx.beginPath();\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.lineWidth = 2;\n            ctx.stroke();\n            ctx.closePath();\n\n        }\n        ctx.closePath();\n        const res = convex_hull(this.props.dots);\n\n        const cansvas2 = this.canvasLineRef.current;\n        const ctx2 = cansvas2.getContext('2d');\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\n        this.setState({lines:res[1]});\n\n    }\n\n    animateLine = async () => {\n        const {lines} = this.state;\n        const canvas2 = this.canvasLineRef.current;\n        const ctx2 = canvas2.getContext('2d');\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        ctx2.fillStyle = '#ffffff';\n        ctx2.strokeStyle = '#ffffff';\n        for( let i = 0; i<lines.length;i++ ){\n            if( !this.props.onGoing ){\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n                return;\n            }\n            ctx2.beginPath();\n            if( lines[i].add ){\n                ctx2.beginPath();\n                ctx2.lineWidth = 2;\n                ctx2.fillStyle = 'black';\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.fillStyle = 'red';\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.lineWidth = 2;\n                ctx2.strokeStyle = '#000000';\n            } else{\n                ctx2.beginPath();\n                ctx2.fillStyle = 'whitesmoke';\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.fillStyle = 'whitesmoke';\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.lineWidth = 4;\n                ctx2.strokeStyle = 'whitesmoke';\n            }\n\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\n            ctx2.stroke();\n            ctx2.closePath();\n            if( i === lines.length - 1 ){\n                this.props.onTurnOff();\n            }\n            await sleep(this.props.speed);\n        }\n    }\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Canvas;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Convex Hull</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={50}\n                    step={1}\n                    min={10}\n                    max={200}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button\n                    className=\"btn btn-warning btn-lg m-2\"\n                    onClick={this.props.onVisualize}\n                    disabled={this.props.isDisabled}\n                    style={this.isClickable()}\n                >\n                    Visualize Graham Scan\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport MyTimer from \"./timer\";\nimport Canvas from \"./canvas\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nclass ConvexHull extends Component {\n    state={\n        dots:[],\n        lines:[],\n        isALgoLive:false,\n        width:100,\n        height:100,\n        isRunning:false,\n        speed:100,\n        number:50\n\n    }\n    constructor() {\n        super();\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\n    }\n    componentDidMount() {\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onRefresh={this.handleRefreshDots}\n                    onVisualize={this.handleVisualize}\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                />\n                <Canvas\n                    width={this.state.width}\n                    height={this.state.height}\n                    dots={this.state.dots}\n                    onTurnOff={this.handleTurnOff}\n                    onGoing={this.state.isRunning}\n                    speed={this.state.speed}\n                />\n            </div>\n        );\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        this.handleRefreshDots();\n    }\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleAlgoStateChanged = (val) => {\n        this.setState({isAlgoLive:val});\n    }\n    handleVisualize = () =>{\n        this.setState({isRunning:true});\n    }\n    handleTurnOff = () =>{\n        this.setState({onGoing:false});\n    }\n    handleRefreshDots = () =>{\n        this.setState({isRunning:false});\n        this.setState({dots:getNewDots(this.state.number)});\n    }\n\n    handleMoreDot = () =>{\n        const row = Math.floor(Math.random()*400)+10;\n        const col = Math.floor(Math.random()*400)+10;\n        const dot = {\n            row:row,\n            col:col\n        }\n        const dots = this.state.dots;\n        dots.push(dot);\n        this.setState(dots);\n    }\n}\nfunction getNewDots(number){\n    const dots= [];\n    for(let  i = 0; i<number;i++){\n        dots.push(getDot());\n    }\n    dots.sort( (a,b) => {\n       if( a.xx!==b.xx ){\n           return a.xx-b.xx;\n       } else{\n           return a.yy - b.yy;\n       }\n    } );\n    return dots;\n}\nfunction getDot(){\n    const width = window.innerWidth-50;\n    const height = window.innerHeight-250;\n    const rowpos = Math.floor( Math.random()*height )+25;\n    const colpos = Math.floor(Math.random()*width)+25;\n    return {\n        xx:colpos,\n        yy:rowpos,\n    }\n}\nexport default ConvexHull;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EntryPoint extends Component {\n    state={\n        error:false\n    }\n    render() {\n        return (\n            <div>\n                <TextField\n                    error={this.state.error}\n                    id=\"standard-error-helper-text\"\n                    label=\"Upper Number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    onChange={this.getData}\n                /> <br /><br />\n                <h1>\n                    Guess a number between 0 and {this.props.upper}\n                </h1>\n                <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.startGame}\n                >\n                    Start the game\n                </button>\n            </div>\n        );\n    }\n    getData = (e)=>{\n        if( e.target.value!== \"\" ){\n            console.log(e.target.value);\n            this.props.setUpper(e.target.value);\n        }\n        else{\n            this.props.setUpper(100)\n        }\n    }\n    validateNumbers = () =>{\n\n    }\n}\n\nexport default EntryPoint;","import React, {useEffect} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 400,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        width: 400,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([props.lower, props.upper]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n    useEffect(()=>{\n        setValue([props.lower,props.upper]);\n    },[props.lower,props.upper])\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"on\"\n                max={props.max}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Binary Search\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport RangeSlider from \"./doubleSlider\";\n\nclass Guess extends Component {\n    render() {\n        return (\n            <div >\n\n                <p>\n\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        Toggle Range\n                    </button>\n                </p>\n                <div className=\"collapse\" id=\"collapseExample\">\n                    <div className=\"card card-body\">\n                        <center style={{justifyContent:\"center\"}}>\n                            <RangeSlider\n                                upper={this.props.upper}\n                                lower={this.props.lower}\n                                max={this.props.max}\n                            />\n                        </center>\n                    </div>\n                </div>\n\n               <h1>\n                    Is you number greater than {this.getMid()}?\n                </h1> <br />\n                <button\n                    className='btn btn-lg btn-success m-2'\n                    onClick={this.props.yesButton}\n                >Yes</button>\n                <button\n                    className='btn btn-lg btn-danger m-2'\n                    onClick={this.props.noButton}\n                >No</button> <br/>\n            </div>\n        );\n    }\n    getMid = () => {\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\n        return mid;\n    }\n}\n\nexport default Guess;","import React, {Component} from 'react';\n\nclass Result extends Component {\n    render() {\n        return (\n            <div>\n                <span className='display-3'>\n                    Your number is {this.props.res}\n                </span> <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.onRestart}\n                >\n                    Restart\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, {Component} from 'react';\nimport Guess from \"./guess\";\nimport Result from \"./result\";\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.upper !== this.props.lower &&\n                <Guess\n                    yesButton={this.props.yesButton}\n                    noButton={this.props.noButton}\n                    upper={this.props.upper}\n                    lower={this.props.lower}\n                    max={this.props.max}\n                />\n                }\n                {this.props.upper === this.props.lower &&\n                   <Result\n                       res={this.props.upper}\n                       onRestart={this.props.onRestart}\n                   />\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Binary Search Game</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport EntryPoint from \"./entryPoint\";\nimport Search from \"./search\";\nimport Navbar from \"./navbar\";\n\nclass BinarySearch extends Component {\n    state={\n        upper:100,\n        lower:0,\n        max:100,\n        isRunning:false\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <br />\n                <br />\n                <br />\n            <center>\n                {!this.state.isRunning &&\n                <EntryPoint\n                    startGame={this.handleStartGame}\n                    upper={this.state.upper}\n                    setUpper={this.handleSetUpper}\n                /> }\n                {this.state.isRunning &&\n                <Search\n                    yesButton={this.handleYes}\n                    noButton={this.handleNo}\n                    upper={this.state.upper}\n                    lower={this.state.lower}\n                    max={this.state.max}\n                    onRestart={this.handleRestart}\n                />\n                }\n            </center>\n            </div>\n        );\n    }\n    handleStartGame = () =>{\n        this.setState({isRunning:true});\n    }\n    handleRestart = () =>{\n        this.setState({isRunning:false,upper:100,lower:0});\n    }\n    handleYes = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({lower:mid+1});\n    }\n    handleNo = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({upper:mid});\n    }\n    handleSetUpper = (up) =>{\n        let val = parseInt(up);\n        if( val<=0 ){\n            val = 100;\n        }\n        this.setState({upper:val,max:val});\n    }\n}\n\nexport default BinarySearch;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"orange\";\n        } else if( this.props.rect.isLeft ){\n            return \"red\";\n        } else if(this.props.rect.isRight){\n            return \"purple\";\n        }else{\n            return \"#ADD8E6\";\n        }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest != i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport mergeSort from '../algorithms/mergeSort';\nimport heapSort from \"../algorithms/heapSort\";\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass RecursiveSort extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0\n    }\n\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        this.setState({rects});\n        /* var rects2 = rects.slice();\n         console.log(rects2);\n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Menu\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n                <div className=' justify-content-center'>\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isSorted: false, isSorting: false}\n            rects[i] = rect;\n        }\n        this.setState({rects});\n    }\n    handleCountChange = (val) => {\n        this.setState({count: val});\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (110 - val);\n        this.setState({speed});\n    }\n\n    handleSort = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                steps = mergeSort(this.state.rects);\n                this.handleMerge(steps);\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n\n    handleQuick = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        let hasChanged = -1;\n        let changed;\n        for(let i=0;i<steps.length;i++){\n            let step = steps[i];\n            if( hasChanged!==-1 ){\n                let {left,right} = changed;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\n            }\n            if( step.changedRange ){\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                let {left,right} = step;\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                }\n                for (let j = left; j <=right; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\n                }\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\n                }\n            }else if(step.swap){\n                let {left,right} = step;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\n                let temp = prevRect[left];\n                prevRect[left] = prevRect[right];\n                prevRect[right] = temp;\n                hasChanged = 1;\n                changed = step;\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\n                }\n                this.setState({rects: prevRect});\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\n                    this.setState({rects: prevRect});\n                    await sleep(10);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleHeap = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n\n        for(let i = 0;i<steps.length;i++){\n            let step = steps[i];\n            //   console.log(step);\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n            let {left,right,sorted} = step;\n            prevRect[left] = {...prevRect[left],isLeft:true};\n            prevRect[right] = {...prevRect[right],isRight:true};\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            let temp = prevRect[left];\n            prevRect[left] = prevRect[right];\n            prevRect[right] = temp;\n            this.setState({rects: prevRect});\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleMerge = async (steps) => {\n        this.setState({isRunning1: true});\n\n        const {speed} = this.state;\n\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        await sleep(this.state.speed);\n      //  console.log(\"steps \", steps.length);\n        for (let ii = 0; ii < steps.length; ii++) {\n            let step = steps[ii];\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\n            for (let i = step.left; i <= step.mid; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\n            }\n            for (let i = step.mid + 1; i <= step.right; i++) {\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n          //  console.log(step);\n            for(let i= step.left;i<=step.right;i++){\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);\n            }\n\n            if (ii === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false});\n            }\n\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            prevRect = this.state.rects;\n          /*  for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\n            }*/\n            this.setState({rects: prevRect});\n        }\n    }\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false,\n        isLeft: false,\n        isRight: false\n    }\n}\n\nexport default RecursiveSort;","import React, {Component} from 'react';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Seive from \"./primeComponents/seive\";\nimport Sort from \"./sortComponents/sort\";\nimport Queen from \"./queenComponents/queen\";\nimport ConvexHull from \"./convexHullComponents/convexHull\";\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\nclass App extends Component {\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/pathfinder'  component={Pathfinder}/>\n                    <Route path='/prime' component={Seive}/>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/nqueen' component={Queen}/>\n                    <Route path='/convexhull' component={ConvexHull}/>\n                    <Route path='/binarysearch' component={BinarySearch}/>\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/' component={Home}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}